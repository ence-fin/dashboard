// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BusinessType {
  RETAIL
  SERVICE
  MANUFACTURING
}

enum CurrencyType {
  USD
  EUR
  JPY
  GBP
  AUD
  CAD
  CHF
  CNY
  SEK
  NZD
  NOK
  SGD
  KRW
  INR
  BRL
  ZAR
  AED
  HKD
  THB
  MXN
}

enum StateType {
  ACTIVE
  INACTIVE
}

model User {
  id            String        @id @default(uuid())
  name          String? // Todo: Divide Firstname + LastName
  emailVerified Boolean?
  email         String        @unique
  image         String?
  state         StateType     @default(ACTIVE)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  organizations Organization?
  accounts      Account[]
  session       Session[]
}

model Organization {
  id                         String        @id @default(uuid())
  orgName                    String
  whatsappNumber             Int?
  businessType               BusinessType?
  businessRegistrationNumber String?
  email                      String?
  website                    String?
  logo                       String?
  address                    Json?
  gstin                      String?
  pan                        String?
  currencyType               CurrencyType?
  state                      StateType     @default(ACTIVE)
  createdAt                  DateTime      @default(now())
  updatedAt                  DateTime      @updatedAt
  createdBy                  User          @relation(fields: [createdById], references: [id])
  createdById                String        @unique
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
